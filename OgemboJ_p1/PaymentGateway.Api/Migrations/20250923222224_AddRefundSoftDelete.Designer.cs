// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PaymentGateway.Api.Data;

#nullable disable

namespace PaymentGateway.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250923222224_AddRefundSoftDelete")]
    partial class AddRefundSoftDelete
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PaymentGateway.Api.Domain.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("PaymentGateway.Api.Domain.Merchant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApiKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Merchants");
                });

            modelBuilder.Entity("PaymentGateway.Api.Domain.MerchantPaymentMethod", b =>
                {
                    b.Property<Guid>("MerchantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PaymentMethodId")
                        .HasColumnType("int");

                    b.HasKey("MerchantId", "PaymentMethodId");

                    b.HasIndex("PaymentMethodId");

                    b.ToTable("MerchantPaymentMethods");
                });

            modelBuilder.Entity("PaymentGateway.Api.Domain.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("MerchantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PaymentMethodId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RefundedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("MerchantId");

                    b.HasIndex("PaymentMethodId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("PaymentGateway.Api.Domain.PaymentMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PaymentMethods");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "CARD",
                            DisplayName = "Card"
                        },
                        new
                        {
                            Id = 2,
                            Code = "MPESA",
                            DisplayName = "M-Pesa"
                        });
                });

            modelBuilder.Entity("PaymentGateway.Api.Domain.MerchantPaymentMethod", b =>
                {
                    b.HasOne("PaymentGateway.Api.Domain.Merchant", "Merchant")
                        .WithMany("MerchantPaymentMethods")
                        .HasForeignKey("MerchantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PaymentGateway.Api.Domain.PaymentMethod", "PaymentMethod")
                        .WithMany("MerchantPaymentMethods")
                        .HasForeignKey("PaymentMethodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Merchant");

                    b.Navigation("PaymentMethod");
                });

            modelBuilder.Entity("PaymentGateway.Api.Domain.Payment", b =>
                {
                    b.HasOne("PaymentGateway.Api.Domain.Customer", "Customer")
                        .WithMany("Payments")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PaymentGateway.Api.Domain.Merchant", "Merchant")
                        .WithMany("Payments")
                        .HasForeignKey("MerchantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PaymentGateway.Api.Domain.PaymentMethod", "PaymentMethod")
                        .WithMany()
                        .HasForeignKey("PaymentMethodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Merchant");

                    b.Navigation("PaymentMethod");
                });

            modelBuilder.Entity("PaymentGateway.Api.Domain.Customer", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("PaymentGateway.Api.Domain.Merchant", b =>
                {
                    b.Navigation("MerchantPaymentMethods");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("PaymentGateway.Api.Domain.PaymentMethod", b =>
                {
                    b.Navigation("MerchantPaymentMethods");
                });
#pragma warning restore 612, 618
        }
    }
}
